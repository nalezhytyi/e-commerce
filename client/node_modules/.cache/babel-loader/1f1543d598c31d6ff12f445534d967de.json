{"ast":null,"code":"var _jsxFileName = \"/Users/nalezhytyi/Projects/react/e-commerce/src/pages/shop/Shop.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../category/Collection';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop=page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/nalezhytyi/Projects/react/e-commerce/src/pages/shop/Shop.jsx"],"names":["React","CollectionsOverview","Collection","Route","firestore","convertCollectionSnapshotToMap","connect","updateCollections","WithSpinner","CollectionOverViewWithSpinner","CollectionWithSpinner","Shop","Component","state","loading","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,mBAAD,CAAjD;AACA,MAAMS,qBAAqB,GAAGF,WAAW,CAACN,UAAD,CAAzC;;AAEA,MAAMS,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE;AADL,KADuB;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGjB,8BAA8B,CAACgB,QAAD,CAApD;AACAd,MAAAA,iBAAiB,CAACe,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH;;AAEDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AACO,MAAA,MAAM,EAAEV,KAAK,iBAAI,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEF;AAA1C,SAAuDE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAEV,KAAK,iBAAI,oBAAC,qBAAD;AAAuB,QAAA,SAAS,EAAEF;AAAlC,SAA+CE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AA3B8B;;AA8BnC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,iBAAiB,EAAEsB,cAAc,IAAID,QAAQ,CAACrB,iBAAiB,CAACsB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf","sourcesContent":["import React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../category/Collection';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/WithSpinner';\n\nconst CollectionOverViewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionWithSpinner = WithSpinner(Collection);\n\nclass Shop extends React.Component {\n    state = {\n        loading: true\n    };\n    \n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.get().then(snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            updateCollections(collectionMap);\n            this.setState({ loading: false })\n        })\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className='shop=page'>\n                <Route exact path={`${match.path}`}\n                       render={props => <CollectionOverViewWithSpinner isLoading={loading} {...props} />} />\n                <Route path={`${match.path}/:collectionId`}\n                       render={props => <CollectionWithSpinner isLoading={loading} {...props} />} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(Shop)\n"]},"metadata":{},"sourceType":"module"}