{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyDLQJewWvSOhT3rsq9nxW7m2c6EWAPOSIg',\n  authDomain: 'e-commence-db.firebaseapp.com',\n  databaseURL: 'https://e-commence-db.firebaseio.com',\n  projectId: 'e-commence-db',\n  storageBucket: 'e-commence-db.appspot.com',\n  messagingSenderId: '537799501293',\n  appId: '1:537799501293:web:bcb1cbed86f2532ff3f3e4'\n}; //User registration START\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`/users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log('error creating user', e.message);\n    }\n  }\n\n  return userRef;\n}; //User registration END\n\nfirebase.initializeApp(config); //Add locale shop data to firebase START\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n}; //Add locale shop data to firebase END\n\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/nalezhytyi/Projects/react/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","e","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","auth","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,WAAW,EAAE,sCAHF;AAIXC,EAAAA,SAAS,EAAE,eAJA;AAKXC,EAAAA,aAAa,EAAE,2BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf,C,CASA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,UAASJ,QAAQ,CAACK,GAAI,EAArC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,CAAC,CAACG,OAArC;AACH;AACJ;;AACD,SAAOf,OAAP;AACH,CArBM,C,CAsBP;;AAEAZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,E,CAEA;;AACA,OAAO,MAAM4B,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC5E,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAYM,aAAZ;AAEA,QAAME,KAAK,GAAGrB,SAAS,CAACqB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AACxB,UAAMC,SAAS,GAAGL,aAAa,CAAClB,GAAd,EAAlB;AACAoB,IAAAA,KAAK,CAACX,GAAN,CAAUc,SAAV,EAAqBD,GAArB;AACH,GAHD;AAIA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACH,CAVM,C,CAWP;;AAEA,OAAO,MAAMC,8BAA8B,GAAIC,WAAD,IAAiB;AAC3D,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqB7B,GAAG,IAAI;AACtD,UAAM;AAAE8B,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB/B,GAAG,CAACgC,IAAJ,EAAzB;AAEA,WAAO;AACHC,MAAAA,SAAS,EAAEC,SAAS,CAACJ,KAAK,CAACK,WAAN,EAAD,CADjB;AAEHC,MAAAA,EAAE,EAAEpC,GAAG,CAACoC,EAFL;AAGHN,MAAAA,KAHG;AAIHC,MAAAA;AAJG,KAAP;AAMH,GAT6B,CAA9B;AAUA,SAAOJ,qBAAqB,CAACU,MAAtB,CAA6B,CAACC,WAAD,EAAcnB,UAAd,KAA6B;AAC7DmB,IAAAA,WAAW,CAACnB,UAAU,CAACW,KAAX,CAAiBK,WAAjB,EAAD,CAAX,GAA8ChB,UAA9C;AACA,WAAOmB,WAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CAfM;AAiBP,OAAO,MAAMC,IAAI,GAAGrD,QAAQ,CAACqD,IAAT,EAAb;AACP,OAAO,MAAMxC,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,OAAO,MAAMyC,cAAc,GAAG,IAAItD,QAAQ,CAACqD,IAAT,CAAcE,kBAAlB,EAAvB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CAA/B;AAEP,eAAetD,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: 'AIzaSyDLQJewWvSOhT3rsq9nxW7m2c6EWAPOSIg',\n    authDomain: 'e-commence-db.firebaseapp.com',\n    databaseURL: 'https://e-commence-db.firebaseio.com',\n    projectId: 'e-commence-db',\n    storageBucket: 'e-commence-db.appspot.com',\n    messagingSenderId: '537799501293',\n    appId: '1:537799501293:web:bcb1cbed86f2532ff3f3e4'\n};\n//User registration START\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n    const userRef = firestore.doc(`/users/${userAuth.uid}`)\n\n    const snapShot = await userRef.get()\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date()\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (e) {\n            console.log('error creating user', e.message)\n        }\n    }\n    return userRef;\n}\n//User registration END\n\nfirebase.initializeApp(config);\n\n//Add locale shop data to firebase START\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    console.log(collectionRef);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj)\n    })\n    return await batch.commit()\n}\n//Add locale shop data to firebase END\n\nexport const convertCollectionSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const { title, items } = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    })\n    return transformedCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {})\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}