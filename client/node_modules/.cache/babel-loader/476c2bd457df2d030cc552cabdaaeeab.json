{"ast":null,"code":"import { takeEvery } from '@redux-saga/core/effects';\nimport shopActionTypes from './shop.types';\nimport { convertCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('i am fired');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/nalezhytyi/Projects/react/e-commerce/src/redux/shop/shop.sagas.js"],"names":["takeEvery","shopActionTypes","convertCollectionSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionMap","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,8BAAT,EAAyCC,SAAzC,QAA0D,+BAA1D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CACRI,GADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,UAAMC,aAAa,GAAGd,8BAA8B,CAACa,QAAD,CAApD;AACAJ,IAAAA,QAAQ,CAACN,uBAAuB,CAACW,aAAD,CAAxB,CAAR;AACH,GALL,EAMKC,KANL,CAMWC,KAAK,IAAIP,QAAQ,CAACP,uBAAuB,CAACc,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOH;AAED,OAAO,UAAUP,qBAAV,GAAkC;AACrC,QAAMZ,SAAS,CAACC,eAAe,CAACmB,uBAAjB,EACXd,qBADW,CAAf;AAGH","sourcesContent":["import { takeEvery } from '@redux-saga/core/effects';\n\nimport shopActionTypes from './shop.types';\nimport { convertCollectionSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('i am fired');\n\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart())\n\n    collectionRef\n        .get()\n        .then(snapshot => {\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionMap));\n        })\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n}\n"]},"metadata":{},"sourceType":"module"}